name: Make Release
on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 1 * ?
  pull_request:
    branches:
      - main
jobs:
  update_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: refs/heads/release
      - name: Check update
        run: |
          git fetch
          export UPDATED=$(git diff --name-only remotes/origin/release...remotes/origin/main | wc -l)
          echo "UPDATE_FILES_NUM=${UPDATED}" >> $GITHUB_ENV
          echo "detected ${UPDATED} updated files."
      - name: Merge
        if: ${{ env.UPDATE_FILES_NUM > 0 }}
        run: |
          git config user.email github-actions[bot]@users.noreply.github.com
          git config user.name github-actions[bot]
          git merge remotes/origin/main
          git push origin release
        env:
          TZ: Asia/Tokyo
  publish:
    needs: update_branch
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: refs/heads/release
      - name: Generate tag
        run: echo "TAG=v$(date +'%Y.%m.%d%H%M')" >> $GITHUB_ENV
        env:
          TZ: Asia/Tokyo
      - name: Create a draft release
        run: |
          gh release list
          gh release create ${{ env.TAG }} --title "${{ env.TAG }} released!" --target release --generate-notes --draft --repo streamwest-1629/md2docx
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      tag: ${{ env.TAG }}
  build:
    needs: publish
    strategy:
      matrix:
        target:
          - linux-x86_64
          - windows-x86_64
          - macos-x86_64
        include:
          - target: linux-x86_64
            os: ubuntu-20.04
          - target: windows-x86_64
            os: windows-2019
          - target: macos-x86_64
            os: macos-11
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: refs/heads/release
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: pip
      - name: Pip install
        run: pip install -r requirements.lock
      - name: Run Pyinstaller
        run: pyinstaller --onefile md2docx.py
      - name: Make artifact
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r md2docx-${{ matrix.target }}.zip dist
      - name: Upload release
        run: |
          gh release upload ${{ needs.publish.outputs.tag }} md2docx-${{ matrix.target }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
